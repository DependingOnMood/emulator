angular.module("myApp").service("stateService",["$window","$timeout","$log","$rootScope",function(a,b,c,d){"use strict";function e(a){O=a,void 0!==D&&(f(),y())}function f(){L=[];for(var a=0;a<D.maxNumberOfPlayers;a++){var b="onlyAIs"===O||a===D.maxNumberOfPlayers-1&&"playAgainstTheComputer"===O?"":""+(a+42);L.push({playerId:b})}}function g(){D||l("You must call setGame before any other method."),f(),E={},F=null,G={},H=null,I=[],J=0,M=0,N=null}function h(){g(),v()}function i(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c);return b}function j(a){return angular.copy(a)}function k(a){return void 0===a||null===a}function l(){c.error("Throwing an error with these arguments=",arguments);var b=Array.prototype.join.call(arguments,", ");throw a.alert("Error: "+b),new Error(b)}function m(a,b){return k(a[b])&&l("You must have a field named '",b,"' in this object=",a),a[b]}function n(a,b){for(var c=[],d=0;d<b.length;d++){var e=b[d];c.push(k(e.set)||k(e.set.visibleToPlayerIndexes)||-1!==e.set.visibleToPlayerIndexes.indexOf(a)?e:{type:"Set",key:e.set.key,value:null,visibleToPlayerIndexes:e.set.visibleToPlayerIndexes})}return c}function o(a,b,c){if(null===b)return null;for(var d={},e=i(b),f=0;f<e.length;f++){var g=c[e[f]],h=null;(k(g)||g.indexOf(a)>-1)&&(h=b[e[f]]),d[e[f]]=h}return d}function p(a){for(var b=a.slice(0),c=[];b.length>=1;){var d=Math.floor(Math.random()*b.length),e=b.splice(d,1);c.push(e)}return c}function q(a){var c,d,e;if(k(a.set))if(k(a.setTurn))if(k(a.setRandomInteger))if(k(a.setVisibility))if(k(a["delete"]))if(k(a.shuffle))if(k(a.endMatch))l("Illegal operation, it must contain either set, setRandomInteger, setVisibility, delete, shuffle, or endMatch: "+angular.toJson(a,!0));else{d=a.endMatch,K++;var f=d.endMatchScores;(k(f)||f.length!==L.length)&&l("Field scores in EndMatch operation must be an array of the same length as the number of players. operation="+angular.toJson(a,!0)),N=f,"onlyAIs"===O&&b(h,1e3)}else{d=a.shuffle;var g=d.keys;(k(g)||0===g.length)&&l("Field keys in Shuffle operation must be a non empty array. operation="+angular.toJson(a,!0));for(var i=p(g),n=j(E),o=j(G),q=0;q<i.length;q++){var r=g[q],s=i[q];E[s]=n[r],G[s]=o[r]}}else d=a["delete"],c=d.key,k(c)&&l("Field key in Delete operation must be non null. operation="+angular.toJson(a,!0)),delete E[c],delete G[c];else d=a.setVisibility,c=d.key,e=d.visibleToPlayerIndexes,k(c)&&l("Fields key in SetVisibility operation must be non null. operation="+angular.toJson(a,!0)),G[c]=e;else{d=a.setRandomInteger,c=d.key;var t=d.from,u=d.to;(k(c)||k(t)||k(u))&&l("Fields key, from, and to, in SetRandomInteger operation must be non null. operation="+angular.toJson(a,!0));var v=Math.floor(Math.random()*(u-t)+t);E[c]=v,G[c]=null}else d=a.setTurn,M=m(d,"turnIndex"),K++;else{d=a.set,c=d.key,e=d.visibleToPlayerIndexes;var w=d.value;(k(c)||k(w))&&l("Fields key and value in Set operation must be non null. operation="+angular.toJson(a,!0)),E[c]=w,G[c]=e}}function r(){return"playWhite"===O?0:"playBlack"===O?1:"playViewer"===O?-2:"playAgainstTheComputer"===O||"onlyAIs"===O?M:"passAndPlay"===O?M:O}function s(){return{turnIndexBeforeMove:J,turnIndex:M,endMatchScores:N,lastMove:I,lastState:F,currentState:E,lastVisibleTo:H,currentVisibleTo:G}}function t(a){void 0!==a.turnIndexBeforeMove&&void 0!==a.turnIndex&&void 0!==a.endMatchScores&&(J=a.turnIndexBeforeMove,M=a.turnIndex,N=a.endMatchScores,I=a.lastMove,F=a.lastState,E=a.currentState,H=a.lastVisibleTo,G=a.currentVisibleTo)}function u(){return void 0!==a.Intercom?a.Intercom.getInstance():null}function v(){var b=s(),c=u();null!=c?(a.localStorage.setItem(a.location.toString(),angular.toJson(b)),c.emit("broadcastUpdateUi",b)):y()}function w(a){c.info("gotBroadcastUpdateUi:",a),t(a),y()}function x(){var a=n(M,I),b=o(M,F,H),c=o(M,E,G);I.length>0&&D.isMoveOk({move:a,turnIndexBeforeMove:J,turnIndexAfterMove:M,stateBeforeMove:b,stateAfterMove:c,numberOfPlayers:L.length})!==!0&&l("You declared a hacker for a legal move! move="+a),D.updateUI({move:a,turnIndexBeforeMove:J,turnIndexAfterMove:M,stateBeforeMove:b,stateAfterMove:c,yourPlayerIndex:r(),playersInfo:L,playMode:O,endMatchScores:N})}function y(){0===d.settings.simulateServerDelayMilliseconds?x():b(x,d.settings.simulateServerDelayMilliseconds)}function z(a){D||l("You must call setGame before any other method."),-1===M&&l("You cannot send a move after the game ended!"),r()!==M&&l("Expected a move from turnIndex="+M+" but got the move from index="+r()),F=j(E),H=j(G),J=M,M=-1,I=a,K=0;for(var b=0;b<I.length;b++)q(I[b]);1!==K&&l("We must have either SetTurn or EndMatch, but not both: setTurnOrEndMatchCount="+K),M>=-1&&M<L.length||l("turnIndex must be between -1 and "+L.length+", but it was "+M+"."),v()}function A(b){void 0!==D&&l("You can call setGame only once"),D=b,m(D,"minNumberOfPlayers"),m(D,"maxNumberOfPlayers"),m(D,"isMoveOk"),m(D,"updateUI"),g();var c=u();if(null!=c){c.on("broadcastUpdateUi",w);var d=a.localStorage.getItem(a.location.toString());k(d)||t(angular.fromJson(d))}y()}function B(){if(!N)return!1;for(var a=N[0],b=0;b<N.length;b++)if(a!==N[b])return!1;return!0}function C(){if(!N||B())return null;for(var a=0,b=0;b<N.length;b++)N[a]<N[b]&&(a=b);return a}var D,E,F,G,H,I,J,K,L,M=0,N=null,O="?onlyAIs"===location.search?"onlyAIs":"?playAgainstTheComputer"===location.search?"playAgainstTheComputer":"passAndPlay";d.settings={},d.settings.simulateServerDelayMilliseconds=0,this.getTurnIndex=function(){return M},this.getYourPlayerIndex=r,this.isYourTurn=function(){return-1!==M&&M===r()},this.getEndMatchScores=function(){return N},this.isTie=B,this.getWinnerIndex=C,this.isWinner=function(){return C()===r()},this.setGame=A,this.makeMove=z,this.startNewMatch=h,this.init=g,this.setPlayMode=e,this.getMatchState=s,this.setMatchState=t}]);
//# sourceMappingURL=stateService.min.js.map